#!/usr/bin/env ruby
require 'rubygems'

ENV['RACK_ENV'] = 'production'

require 'hirb'
require 'mongoid'
Mongoid.load!("config/mongoid.yml")

$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')

require 'project'
require 'property_value'
require 'project_catalog'
require 'console_formatter'
require 'metrics/metric'
require 'metrics/number_metric'
require 'metrics/string_metric'
require 'commands/list_projects'
require 'commands/add_project'
require 'commands/add_metric'
require 'commands/edit_property'
require 'storage/metric_mongo'
require 'storage/project_mongo'
require 'storage/property_value_mongo'

require 'gli'
include GLI

program_desc 'Command Line Interface for Technical Coordination'

version '0.0.1'

command :add do |command|
  command.action do |global, options, args|
    AddProject.new(args.first).call
  end
end

command :add_metric do |command|
  command.flag :pn, :project_name
  command.flag :mt, :metric_type
  command.action do |global, options, args|
    AddMetric.new(options[:project_name], options[:metric_type], args.first).call
  end
end

command :edit_property do |command|
  command.flag :pn, :project_name
  command.flag :mn, :metric_name
  command.action do |global, options, args|
    EditProperty.new(options[:project_name], options[:metric_name], args.first).call
  end
end

desc "List projects from catalog"
long_desc "Lists projects from catalog matching specified criteria and formats results according to specified --format"
command :list do |command|
  command.arg_name 'table format'
  command.desc 'ruby code for table format'
  command.default_value "{'Name' => 'name'}"
  command.flag :f, :format

  command.action do |global, options, args|
    puts ListProjects.new(options[:format], args.first).call
  end
end

exit GLI.run(ARGV)
